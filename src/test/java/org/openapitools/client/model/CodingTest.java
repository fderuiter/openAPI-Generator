/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Coding
 */
public class CodingTest {
    private final Coding model = new Coding();

    /**
     * Model tests for Coding
     */
    @Test
    public void testCoding() {
        // TODO: test Coding
    }

    /**
     * Test the property 'studyKey'
     */
    @Test
    public void studyKeyTest() {
        // TODO: test studyKey
    }

    /**
     * Test the property 'siteName'
     */
    @Test
    public void siteNameTest() {
        // TODO: test siteName
    }

    /**
     * Test the property 'siteId'
     */
    @Test
    public void siteIdTest() {
        // TODO: test siteId
    }

    /**
     * Test the property 'subjectId'
     */
    @Test
    public void subjectIdTest() {
        // TODO: test subjectId
    }

    /**
     * Test the property 'subjectKey'
     */
    @Test
    public void subjectKeyTest() {
        // TODO: test subjectKey
    }

    /**
     * Test the property 'formId'
     */
    @Test
    public void formIdTest() {
        // TODO: test formId
    }

    /**
     * Test the property 'formName'
     */
    @Test
    public void formNameTest() {
        // TODO: test formName
    }

    /**
     * Test the property 'formKey'
     */
    @Test
    public void formKeyTest() {
        // TODO: test formKey
    }

    /**
     * Test the property 'revision'
     */
    @Test
    public void revisionTest() {
        // TODO: test revision
    }

    /**
     * Test the property 'recordId'
     */
    @Test
    public void recordIdTest() {
        // TODO: test recordId
    }

    /**
     * Test the property 'variable'
     */
    @Test
    public void variableTest() {
        // TODO: test variable
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'codingId'
     */
    @Test
    public void codingIdTest() {
        // TODO: test codingId
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'codedBy'
     */
    @Test
    public void codedByTest() {
        // TODO: test codedBy
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'dictionaryName'
     */
    @Test
    public void dictionaryNameTest() {
        // TODO: test dictionaryName
    }

    /**
     * Test the property 'dictionaryVersion'
     */
    @Test
    public void dictionaryVersionTest() {
        // TODO: test dictionaryVersion
    }

    /**
     * Test the property 'dateCoded'
     */
    @Test
    public void dateCodedTest() {
        // TODO: test dateCoded
    }

}
