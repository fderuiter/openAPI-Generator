/*
 * Mednet EDC API
 *
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryComment {
    /// Sequence number of the comment/action in the query history
    #[serde(rename = "sequence", skip_serializing_if = "Option::is_none")]
    pub sequence: Option<i32>,
    /// Status of the query after this comment (e.g., Open, Closed)
    #[serde(rename = "annotationStatus", skip_serializing_if = "Option::is_none")]
    pub annotation_status: Option<String>,
    /// Username of the user who made the comment or action
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    /// Text of the comment
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Whether the query was marked closed at this step
    #[serde(rename = "closed", skip_serializing_if = "Option::is_none")]
    pub closed: Option<bool>,
    /// Date of the comment or action
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
}

impl QueryComment {
    pub fn new() -> QueryComment {
        QueryComment {
            sequence: None,
            annotation_status: None,
            user: None,
            comment: None,
            closed: None,
            date: None,
        }
    }
}

