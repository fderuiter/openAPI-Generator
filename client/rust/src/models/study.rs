/*
 * Mednet EDC API
 *
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Study {
    /// Sponsor key that this study belongs to
    #[serde(rename = "sponsorKey", skip_serializing_if = "Option::is_none")]
    pub sponsor_key: Option<String>,
    /// Unique study key
    #[serde(rename = "studyKey", skip_serializing_if = "Option::is_none")]
    pub study_key: Option<String>,
    /// Mednet study ID (internal numeric identifier)
    #[serde(rename = "studyId", skip_serializing_if = "Option::is_none")]
    pub study_id: Option<i32>,
    /// Name of the study
    #[serde(rename = "studyName", skip_serializing_if = "Option::is_none")]
    pub study_name: Option<String>,
    /// Description of the study
    #[serde(rename = "studyDescription", skip_serializing_if = "Option::is_none")]
    pub study_description: Option<String>,
    /// Type of study (e.g., STUDY)
    #[serde(rename = "studyType", skip_serializing_if = "Option::is_none")]
    pub study_type: Option<String>,
    /// Date when the study record was created
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Date when the study record was last modified
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
}

impl Study {
    pub fn new() -> Study {
        Study {
            sponsor_key: None,
            study_key: None,
            study_id: None,
            study_name: None,
            study_description: None,
            study_type: None,
            date_created: None,
            date_modified: None,
        }
    }
}

