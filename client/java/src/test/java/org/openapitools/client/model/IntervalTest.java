/*
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ComponentsSchemasIntervalFormsItem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Interval
 */
public class IntervalTest {
    private final Interval model = new Interval();

    /**
     * Model tests for Interval
     */
    @Test
    public void testInterval() {
        // TODO: test Interval
    }

    /**
     * Test the property 'studyKey'
     */
    @Test
    public void studyKeyTest() {
        // TODO: test studyKey
    }

    /**
     * Test the property 'intervalId'
     */
    @Test
    public void intervalIdTest() {
        // TODO: test intervalId
    }

    /**
     * Test the property 'intervalName'
     */
    @Test
    public void intervalNameTest() {
        // TODO: test intervalName
    }

    /**
     * Test the property 'intervalDescription'
     */
    @Test
    public void intervalDescriptionTest() {
        // TODO: test intervalDescription
    }

    /**
     * Test the property 'intervalSequence'
     */
    @Test
    public void intervalSequenceTest() {
        // TODO: test intervalSequence
    }

    /**
     * Test the property 'intervalGroupId'
     */
    @Test
    public void intervalGroupIdTest() {
        // TODO: test intervalGroupId
    }

    /**
     * Test the property 'intervalGroupName'
     */
    @Test
    public void intervalGroupNameTest() {
        // TODO: test intervalGroupName
    }

    /**
     * Test the property 'timeline'
     */
    @Test
    public void timelineTest() {
        // TODO: test timeline
    }

    /**
     * Test the property 'definedUsingInterval'
     */
    @Test
    public void definedUsingIntervalTest() {
        // TODO: test definedUsingInterval
    }

    /**
     * Test the property 'windowCalculationForm'
     */
    @Test
    public void windowCalculationFormTest() {
        // TODO: test windowCalculationForm
    }

    /**
     * Test the property 'windowCalculationDate'
     */
    @Test
    public void windowCalculationDateTest() {
        // TODO: test windowCalculationDate
    }

    /**
     * Test the property 'actualDateForm'
     */
    @Test
    public void actualDateFormTest() {
        // TODO: test actualDateForm
    }

    /**
     * Test the property 'actualDate'
     */
    @Test
    public void actualDateTest() {
        // TODO: test actualDate
    }

    /**
     * Test the property 'dueDateWillBeIn'
     */
    @Test
    public void dueDateWillBeInTest() {
        // TODO: test dueDateWillBeIn
    }

    /**
     * Test the property 'negativeSlack'
     */
    @Test
    public void negativeSlackTest() {
        // TODO: test negativeSlack
    }

    /**
     * Test the property 'positiveSlack'
     */
    @Test
    public void positiveSlackTest() {
        // TODO: test positiveSlack
    }

    /**
     * Test the property 'eproGracePeriod'
     */
    @Test
    public void eproGracePeriodTest() {
        // TODO: test eproGracePeriod
    }

    /**
     * Test the property 'forms'
     */
    @Test
    public void formsTest() {
        // TODO: test forms
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'dateModified'
     */
    @Test
    public void dateModifiedTest() {
        // TODO: test dateModified
    }

}
