/*
 * Mednet EDC API
 *
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing QueryComment
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QueryCommentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for QueryComment
        //private QueryComment instance;

        public QueryCommentTests()
        {
            // TODO uncomment below to create an instance of QueryComment
            //instance = new QueryComment();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QueryComment
        /// </summary>
        [Fact]
        public void QueryCommentInstanceTest()
        {
            // TODO uncomment below to test "IsType" QueryComment
            //Assert.IsType<QueryComment>(instance);
        }

        /// <summary>
        /// Test the property 'Sequence'
        /// </summary>
        [Fact]
        public void SequenceTest()
        {
            // TODO unit test for the property 'Sequence'
        }

        /// <summary>
        /// Test the property 'AnnotationStatus'
        /// </summary>
        [Fact]
        public void AnnotationStatusTest()
        {
            // TODO unit test for the property 'AnnotationStatus'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }

        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

        /// <summary>
        /// Test the property 'Closed'
        /// </summary>
        [Fact]
        public void ClosedTest()
        {
            // TODO unit test for the property 'Closed'
        }

        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
    }
}
