/*
 * Mednet EDC API
 *
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Interval
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IntervalTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Interval
        //private Interval instance;

        public IntervalTests()
        {
            // TODO uncomment below to create an instance of Interval
            //instance = new Interval();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Interval
        /// </summary>
        [Fact]
        public void IntervalInstanceTest()
        {
            // TODO uncomment below to test "IsType" Interval
            //Assert.IsType<Interval>(instance);
        }

        /// <summary>
        /// Test the property 'StudyKey'
        /// </summary>
        [Fact]
        public void StudyKeyTest()
        {
            // TODO unit test for the property 'StudyKey'
        }

        /// <summary>
        /// Test the property 'IntervalId'
        /// </summary>
        [Fact]
        public void IntervalIdTest()
        {
            // TODO unit test for the property 'IntervalId'
        }

        /// <summary>
        /// Test the property 'IntervalName'
        /// </summary>
        [Fact]
        public void IntervalNameTest()
        {
            // TODO unit test for the property 'IntervalName'
        }

        /// <summary>
        /// Test the property 'IntervalDescription'
        /// </summary>
        [Fact]
        public void IntervalDescriptionTest()
        {
            // TODO unit test for the property 'IntervalDescription'
        }

        /// <summary>
        /// Test the property 'IntervalSequence'
        /// </summary>
        [Fact]
        public void IntervalSequenceTest()
        {
            // TODO unit test for the property 'IntervalSequence'
        }

        /// <summary>
        /// Test the property 'IntervalGroupId'
        /// </summary>
        [Fact]
        public void IntervalGroupIdTest()
        {
            // TODO unit test for the property 'IntervalGroupId'
        }

        /// <summary>
        /// Test the property 'IntervalGroupName'
        /// </summary>
        [Fact]
        public void IntervalGroupNameTest()
        {
            // TODO unit test for the property 'IntervalGroupName'
        }

        /// <summary>
        /// Test the property 'Timeline'
        /// </summary>
        [Fact]
        public void TimelineTest()
        {
            // TODO unit test for the property 'Timeline'
        }

        /// <summary>
        /// Test the property 'DefinedUsingInterval'
        /// </summary>
        [Fact]
        public void DefinedUsingIntervalTest()
        {
            // TODO unit test for the property 'DefinedUsingInterval'
        }

        /// <summary>
        /// Test the property 'WindowCalculationForm'
        /// </summary>
        [Fact]
        public void WindowCalculationFormTest()
        {
            // TODO unit test for the property 'WindowCalculationForm'
        }

        /// <summary>
        /// Test the property 'WindowCalculationDate'
        /// </summary>
        [Fact]
        public void WindowCalculationDateTest()
        {
            // TODO unit test for the property 'WindowCalculationDate'
        }

        /// <summary>
        /// Test the property 'ActualDateForm'
        /// </summary>
        [Fact]
        public void ActualDateFormTest()
        {
            // TODO unit test for the property 'ActualDateForm'
        }

        /// <summary>
        /// Test the property 'ActualDate'
        /// </summary>
        [Fact]
        public void ActualDateTest()
        {
            // TODO unit test for the property 'ActualDate'
        }

        /// <summary>
        /// Test the property 'DueDateWillBeIn'
        /// </summary>
        [Fact]
        public void DueDateWillBeInTest()
        {
            // TODO unit test for the property 'DueDateWillBeIn'
        }

        /// <summary>
        /// Test the property 'NegativeSlack'
        /// </summary>
        [Fact]
        public void NegativeSlackTest()
        {
            // TODO unit test for the property 'NegativeSlack'
        }

        /// <summary>
        /// Test the property 'PositiveSlack'
        /// </summary>
        [Fact]
        public void PositiveSlackTest()
        {
            // TODO unit test for the property 'PositiveSlack'
        }

        /// <summary>
        /// Test the property 'EproGracePeriod'
        /// </summary>
        [Fact]
        public void EproGracePeriodTest()
        {
            // TODO unit test for the property 'EproGracePeriod'
        }

        /// <summary>
        /// Test the property 'Forms'
        /// </summary>
        [Fact]
        public void FormsTest()
        {
            // TODO unit test for the property 'Forms'
        }

        /// <summary>
        /// Test the property 'Disabled'
        /// </summary>
        [Fact]
        public void DisabledTest()
        {
            // TODO unit test for the property 'Disabled'
        }

        /// <summary>
        /// Test the property 'DateCreated'
        /// </summary>
        [Fact]
        public void DateCreatedTest()
        {
            // TODO unit test for the property 'DateCreated'
        }

        /// <summary>
        /// Test the property 'DateModified'
        /// </summary>
        [Fact]
        public void DateModifiedTest()
        {
            // TODO unit test for the property 'DateModified'
        }
    }
}
