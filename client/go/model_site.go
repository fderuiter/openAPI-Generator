/*
Mednet EDC API

The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

API version: 1.0.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Site type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Site{}

// Site struct for Site
type Site struct {
	// Unique study key
	StudyKey *string `json:"studyKey,omitempty"`
	// Unique site ID
	SiteId *int32 `json:"siteId,omitempty"`
	// Name of the site
	SiteName *string `json:"siteName,omitempty"`
	// Enrollment status of the site
	SiteEnrollmentStatus *string `json:"siteEnrollmentStatus,omitempty"`
	// Date when this site was created
	DateCreated *string `json:"dateCreated,omitempty"`
	// Date when this site was last modified
	DateModified *string `json:"dateModified,omitempty"`
}

// NewSite instantiates a new Site object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSite() *Site {
	this := Site{}
	return &this
}

// NewSiteWithDefaults instantiates a new Site object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteWithDefaults() *Site {
	this := Site{}
	return &this
}

// GetStudyKey returns the StudyKey field value if set, zero value otherwise.
func (o *Site) GetStudyKey() string {
	if o == nil || IsNil(o.StudyKey) {
		var ret string
		return ret
	}
	return *o.StudyKey
}

// GetStudyKeyOk returns a tuple with the StudyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetStudyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.StudyKey) {
		return nil, false
	}
	return o.StudyKey, true
}

// HasStudyKey returns a boolean if a field has been set.
func (o *Site) HasStudyKey() bool {
	if o != nil && !IsNil(o.StudyKey) {
		return true
	}

	return false
}

// SetStudyKey gets a reference to the given string and assigns it to the StudyKey field.
func (o *Site) SetStudyKey(v string) {
	o.StudyKey = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *Site) GetSiteId() int32 {
	if o == nil || IsNil(o.SiteId) {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *Site) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *Site) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetSiteName returns the SiteName field value if set, zero value otherwise.
func (o *Site) GetSiteName() string {
	if o == nil || IsNil(o.SiteName) {
		var ret string
		return ret
	}
	return *o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSiteNameOk() (*string, bool) {
	if o == nil || IsNil(o.SiteName) {
		return nil, false
	}
	return o.SiteName, true
}

// HasSiteName returns a boolean if a field has been set.
func (o *Site) HasSiteName() bool {
	if o != nil && !IsNil(o.SiteName) {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given string and assigns it to the SiteName field.
func (o *Site) SetSiteName(v string) {
	o.SiteName = &v
}

// GetSiteEnrollmentStatus returns the SiteEnrollmentStatus field value if set, zero value otherwise.
func (o *Site) GetSiteEnrollmentStatus() string {
	if o == nil || IsNil(o.SiteEnrollmentStatus) {
		var ret string
		return ret
	}
	return *o.SiteEnrollmentStatus
}

// GetSiteEnrollmentStatusOk returns a tuple with the SiteEnrollmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetSiteEnrollmentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SiteEnrollmentStatus) {
		return nil, false
	}
	return o.SiteEnrollmentStatus, true
}

// HasSiteEnrollmentStatus returns a boolean if a field has been set.
func (o *Site) HasSiteEnrollmentStatus() bool {
	if o != nil && !IsNil(o.SiteEnrollmentStatus) {
		return true
	}

	return false
}

// SetSiteEnrollmentStatus gets a reference to the given string and assigns it to the SiteEnrollmentStatus field.
func (o *Site) SetSiteEnrollmentStatus(v string) {
	o.SiteEnrollmentStatus = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Site) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Site) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *Site) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateModified returns the DateModified field value if set, zero value otherwise.
func (o *Site) GetDateModified() string {
	if o == nil || IsNil(o.DateModified) {
		var ret string
		return ret
	}
	return *o.DateModified
}

// GetDateModifiedOk returns a tuple with the DateModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Site) GetDateModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.DateModified) {
		return nil, false
	}
	return o.DateModified, true
}

// HasDateModified returns a boolean if a field has been set.
func (o *Site) HasDateModified() bool {
	if o != nil && !IsNil(o.DateModified) {
		return true
	}

	return false
}

// SetDateModified gets a reference to the given string and assigns it to the DateModified field.
func (o *Site) SetDateModified(v string) {
	o.DateModified = &v
}

func (o Site) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Site) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StudyKey) {
		toSerialize["studyKey"] = o.StudyKey
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.SiteName) {
		toSerialize["siteName"] = o.SiteName
	}
	if !IsNil(o.SiteEnrollmentStatus) {
		toSerialize["siteEnrollmentStatus"] = o.SiteEnrollmentStatus
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.DateModified) {
		toSerialize["dateModified"] = o.DateModified
	}
	return toSerialize, nil
}

type NullableSite struct {
	value *Site
	isSet bool
}

func (v NullableSite) Get() *Site {
	return v.value
}

func (v *NullableSite) Set(val *Site) {
	v.value = val
	v.isSet = true
}

func (v NullableSite) IsSet() bool {
	return v.isSet
}

func (v *NullableSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSite(val *Site) *NullableSite {
	return &NullableSite{value: val, isSet: true}
}

func (v NullableSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


