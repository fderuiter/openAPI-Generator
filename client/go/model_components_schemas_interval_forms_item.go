/*
Mednet EDC API

The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

API version: 1.0.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ComponentsSchemasIntervalFormsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentsSchemasIntervalFormsItem{}

// ComponentsSchemasIntervalFormsItem struct for ComponentsSchemasIntervalFormsItem
type ComponentsSchemasIntervalFormsItem struct {
	// Form ID scheduled in the interval
	FormId *int32 `json:"formId,omitempty"`
	// Form key scheduled in the interval
	FormKey *string `json:"formKey,omitempty"`
	// Form name scheduled in the interval
	FormName *string `json:"formName,omitempty"`
}

// NewComponentsSchemasIntervalFormsItem instantiates a new ComponentsSchemasIntervalFormsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentsSchemasIntervalFormsItem() *ComponentsSchemasIntervalFormsItem {
	this := ComponentsSchemasIntervalFormsItem{}
	return &this
}

// NewComponentsSchemasIntervalFormsItemWithDefaults instantiates a new ComponentsSchemasIntervalFormsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentsSchemasIntervalFormsItemWithDefaults() *ComponentsSchemasIntervalFormsItem {
	this := ComponentsSchemasIntervalFormsItem{}
	return &this
}

// GetFormId returns the FormId field value if set, zero value otherwise.
func (o *ComponentsSchemasIntervalFormsItem) GetFormId() int32 {
	if o == nil || IsNil(o.FormId) {
		var ret int32
		return ret
	}
	return *o.FormId
}

// GetFormIdOk returns a tuple with the FormId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsSchemasIntervalFormsItem) GetFormIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FormId) {
		return nil, false
	}
	return o.FormId, true
}

// HasFormId returns a boolean if a field has been set.
func (o *ComponentsSchemasIntervalFormsItem) HasFormId() bool {
	if o != nil && !IsNil(o.FormId) {
		return true
	}

	return false
}

// SetFormId gets a reference to the given int32 and assigns it to the FormId field.
func (o *ComponentsSchemasIntervalFormsItem) SetFormId(v int32) {
	o.FormId = &v
}

// GetFormKey returns the FormKey field value if set, zero value otherwise.
func (o *ComponentsSchemasIntervalFormsItem) GetFormKey() string {
	if o == nil || IsNil(o.FormKey) {
		var ret string
		return ret
	}
	return *o.FormKey
}

// GetFormKeyOk returns a tuple with the FormKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsSchemasIntervalFormsItem) GetFormKeyOk() (*string, bool) {
	if o == nil || IsNil(o.FormKey) {
		return nil, false
	}
	return o.FormKey, true
}

// HasFormKey returns a boolean if a field has been set.
func (o *ComponentsSchemasIntervalFormsItem) HasFormKey() bool {
	if o != nil && !IsNil(o.FormKey) {
		return true
	}

	return false
}

// SetFormKey gets a reference to the given string and assigns it to the FormKey field.
func (o *ComponentsSchemasIntervalFormsItem) SetFormKey(v string) {
	o.FormKey = &v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *ComponentsSchemasIntervalFormsItem) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsSchemasIntervalFormsItem) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *ComponentsSchemasIntervalFormsItem) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *ComponentsSchemasIntervalFormsItem) SetFormName(v string) {
	o.FormName = &v
}

func (o ComponentsSchemasIntervalFormsItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentsSchemasIntervalFormsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FormId) {
		toSerialize["formId"] = o.FormId
	}
	if !IsNil(o.FormKey) {
		toSerialize["formKey"] = o.FormKey
	}
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	return toSerialize, nil
}

type NullableComponentsSchemasIntervalFormsItem struct {
	value *ComponentsSchemasIntervalFormsItem
	isSet bool
}

func (v NullableComponentsSchemasIntervalFormsItem) Get() *ComponentsSchemasIntervalFormsItem {
	return v.value
}

func (v *NullableComponentsSchemasIntervalFormsItem) Set(val *ComponentsSchemasIntervalFormsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentsSchemasIntervalFormsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentsSchemasIntervalFormsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentsSchemasIntervalFormsItem(val *ComponentsSchemasIntervalFormsItem) *NullableComponentsSchemasIntervalFormsItem {
	return &NullableComponentsSchemasIntervalFormsItem{value: val, isSet: true}
}

func (v NullableComponentsSchemasIntervalFormsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentsSchemasIntervalFormsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


