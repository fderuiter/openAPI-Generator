/*
Mednet EDC API

The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

API version: 1.0.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Study type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Study{}

// Study struct for Study
type Study struct {
	// Sponsor key that this study belongs to
	SponsorKey *string `json:"sponsorKey,omitempty"`
	// Unique study key
	StudyKey *string `json:"studyKey,omitempty"`
	// Mednet study ID (internal numeric identifier)
	StudyId *int32 `json:"studyId,omitempty"`
	// Name of the study
	StudyName *string `json:"studyName,omitempty"`
	// Description of the study
	StudyDescription *string `json:"studyDescription,omitempty"`
	// Type of study (e.g., STUDY)
	StudyType *string `json:"studyType,omitempty"`
	// Date when the study record was created
	DateCreated *string `json:"dateCreated,omitempty"`
	// Date when the study record was last modified
	DateModified *string `json:"dateModified,omitempty"`
}

// NewStudy instantiates a new Study object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStudy() *Study {
	this := Study{}
	return &this
}

// NewStudyWithDefaults instantiates a new Study object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStudyWithDefaults() *Study {
	this := Study{}
	return &this
}

// GetSponsorKey returns the SponsorKey field value if set, zero value otherwise.
func (o *Study) GetSponsorKey() string {
	if o == nil || IsNil(o.SponsorKey) {
		var ret string
		return ret
	}
	return *o.SponsorKey
}

// GetSponsorKeyOk returns a tuple with the SponsorKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetSponsorKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorKey) {
		return nil, false
	}
	return o.SponsorKey, true
}

// HasSponsorKey returns a boolean if a field has been set.
func (o *Study) HasSponsorKey() bool {
	if o != nil && !IsNil(o.SponsorKey) {
		return true
	}

	return false
}

// SetSponsorKey gets a reference to the given string and assigns it to the SponsorKey field.
func (o *Study) SetSponsorKey(v string) {
	o.SponsorKey = &v
}

// GetStudyKey returns the StudyKey field value if set, zero value otherwise.
func (o *Study) GetStudyKey() string {
	if o == nil || IsNil(o.StudyKey) {
		var ret string
		return ret
	}
	return *o.StudyKey
}

// GetStudyKeyOk returns a tuple with the StudyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetStudyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.StudyKey) {
		return nil, false
	}
	return o.StudyKey, true
}

// HasStudyKey returns a boolean if a field has been set.
func (o *Study) HasStudyKey() bool {
	if o != nil && !IsNil(o.StudyKey) {
		return true
	}

	return false
}

// SetStudyKey gets a reference to the given string and assigns it to the StudyKey field.
func (o *Study) SetStudyKey(v string) {
	o.StudyKey = &v
}

// GetStudyId returns the StudyId field value if set, zero value otherwise.
func (o *Study) GetStudyId() int32 {
	if o == nil || IsNil(o.StudyId) {
		var ret int32
		return ret
	}
	return *o.StudyId
}

// GetStudyIdOk returns a tuple with the StudyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetStudyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StudyId) {
		return nil, false
	}
	return o.StudyId, true
}

// HasStudyId returns a boolean if a field has been set.
func (o *Study) HasStudyId() bool {
	if o != nil && !IsNil(o.StudyId) {
		return true
	}

	return false
}

// SetStudyId gets a reference to the given int32 and assigns it to the StudyId field.
func (o *Study) SetStudyId(v int32) {
	o.StudyId = &v
}

// GetStudyName returns the StudyName field value if set, zero value otherwise.
func (o *Study) GetStudyName() string {
	if o == nil || IsNil(o.StudyName) {
		var ret string
		return ret
	}
	return *o.StudyName
}

// GetStudyNameOk returns a tuple with the StudyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetStudyNameOk() (*string, bool) {
	if o == nil || IsNil(o.StudyName) {
		return nil, false
	}
	return o.StudyName, true
}

// HasStudyName returns a boolean if a field has been set.
func (o *Study) HasStudyName() bool {
	if o != nil && !IsNil(o.StudyName) {
		return true
	}

	return false
}

// SetStudyName gets a reference to the given string and assigns it to the StudyName field.
func (o *Study) SetStudyName(v string) {
	o.StudyName = &v
}

// GetStudyDescription returns the StudyDescription field value if set, zero value otherwise.
func (o *Study) GetStudyDescription() string {
	if o == nil || IsNil(o.StudyDescription) {
		var ret string
		return ret
	}
	return *o.StudyDescription
}

// GetStudyDescriptionOk returns a tuple with the StudyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetStudyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.StudyDescription) {
		return nil, false
	}
	return o.StudyDescription, true
}

// HasStudyDescription returns a boolean if a field has been set.
func (o *Study) HasStudyDescription() bool {
	if o != nil && !IsNil(o.StudyDescription) {
		return true
	}

	return false
}

// SetStudyDescription gets a reference to the given string and assigns it to the StudyDescription field.
func (o *Study) SetStudyDescription(v string) {
	o.StudyDescription = &v
}

// GetStudyType returns the StudyType field value if set, zero value otherwise.
func (o *Study) GetStudyType() string {
	if o == nil || IsNil(o.StudyType) {
		var ret string
		return ret
	}
	return *o.StudyType
}

// GetStudyTypeOk returns a tuple with the StudyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetStudyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StudyType) {
		return nil, false
	}
	return o.StudyType, true
}

// HasStudyType returns a boolean if a field has been set.
func (o *Study) HasStudyType() bool {
	if o != nil && !IsNil(o.StudyType) {
		return true
	}

	return false
}

// SetStudyType gets a reference to the given string and assigns it to the StudyType field.
func (o *Study) SetStudyType(v string) {
	o.StudyType = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Study) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Study) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *Study) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetDateModified returns the DateModified field value if set, zero value otherwise.
func (o *Study) GetDateModified() string {
	if o == nil || IsNil(o.DateModified) {
		var ret string
		return ret
	}
	return *o.DateModified
}

// GetDateModifiedOk returns a tuple with the DateModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Study) GetDateModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.DateModified) {
		return nil, false
	}
	return o.DateModified, true
}

// HasDateModified returns a boolean if a field has been set.
func (o *Study) HasDateModified() bool {
	if o != nil && !IsNil(o.DateModified) {
		return true
	}

	return false
}

// SetDateModified gets a reference to the given string and assigns it to the DateModified field.
func (o *Study) SetDateModified(v string) {
	o.DateModified = &v
}

func (o Study) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Study) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SponsorKey) {
		toSerialize["sponsorKey"] = o.SponsorKey
	}
	if !IsNil(o.StudyKey) {
		toSerialize["studyKey"] = o.StudyKey
	}
	if !IsNil(o.StudyId) {
		toSerialize["studyId"] = o.StudyId
	}
	if !IsNil(o.StudyName) {
		toSerialize["studyName"] = o.StudyName
	}
	if !IsNil(o.StudyDescription) {
		toSerialize["studyDescription"] = o.StudyDescription
	}
	if !IsNil(o.StudyType) {
		toSerialize["studyType"] = o.StudyType
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.DateModified) {
		toSerialize["dateModified"] = o.DateModified
	}
	return toSerialize, nil
}

type NullableStudy struct {
	value *Study
	isSet bool
}

func (v NullableStudy) Get() *Study {
	return v.value
}

func (v *NullableStudy) Set(val *Study) {
	v.value = val
	v.isSet = true
}

func (v NullableStudy) IsSet() bool {
	return v.isSet
}

func (v *NullableStudy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStudy(val *Study) *NullableStudy {
	return &NullableStudy{value: val, isSet: true}
}

func (v NullableStudy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStudy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


