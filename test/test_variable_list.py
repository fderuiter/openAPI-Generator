# coding: utf-8

"""
    Mednet EDC API

    The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

    The version of the OpenAPI document: 1.0.15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.variable_list import VariableList

class TestVariableList(unittest.TestCase):
    """VariableList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VariableList:
        """Test VariableList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VariableList`
        """
        model = VariableList()
        if include_optional:
            return VariableList(
                metadata = openapi_client.models.metadata.Metadata(
                    status = '', 
                    method = '', 
                    path = '', 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    error = { }, ),
                pagination = openapi_client.models.pagination.Pagination(
                    current_page = 56, 
                    size = 56, 
                    total_pages = 56, 
                    total_elements = 56, 
                    sort = [
                        openapi_client.models.sort.Sort(
                            property = '', 
                            direction = 'ASC', )
                        ], ),
                data = [
                    openapi_client.models.variable.Variable(
                        study_key = '', 
                        variable_id = 56, 
                        variable_type = 'TEXT', 
                        variable_name = '', 
                        sequence = 56, 
                        revision = 56, 
                        disabled = True, 
                        date_created = '', 
                        date_modified = '', 
                        form_id = 56, 
                        variable_oid = '', 
                        deleted = True, 
                        form_key = '', 
                        form_name = '', 
                        label = '', 
                        blinded = True, )
                    ]
            )
        else:
            return VariableList(
        )
        """

    def testVariableList(self):
        """Test VariableList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
