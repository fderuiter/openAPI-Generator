# coding: utf-8

"""
    Mednet EDC API

    The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 

    The version of the OpenAPI document: 1.0.15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.interval import Interval

class TestInterval(unittest.TestCase):
    """Interval unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Interval:
        """Test Interval
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Interval`
        """
        model = Interval()
        if include_optional:
            return Interval(
                study_key = '',
                interval_id = 56,
                interval_name = '',
                interval_description = '',
                interval_sequence = 56,
                interval_group_id = 56,
                interval_group_name = '',
                timeline = '',
                defined_using_interval = '',
                window_calculation_form = '',
                window_calculation_date = '',
                actual_date_form = '',
                actual_date = '',
                due_date_will_be_in = 56,
                negative_slack = 56,
                positive_slack = 56,
                epro_grace_period = 56,
                forms = [
                    openapi_client.models.components_schemas_interval_forms_item.components_schemas_Interval_forms_item(
                        form_id = 56, 
                        form_key = '', 
                        form_name = '', )
                    ],
                disabled = True,
                date_created = '',
                date_modified = ''
            )
        else:
            return Interval(
        )
        """

    def testInterval(self):
        """Test Interval"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
