/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MednetEdcApi);
  }
}(this, function(expect, MednetEdcApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MednetEdcApi.Visit();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Visit', function() {
    it('should create an instance of Visit', function() {
      // uncomment below and update the code to test Visit
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be.a(MednetEdcApi.Visit);
    });

    it('should have the property studyKey (base name: "studyKey")', function() {
      // uncomment below and update the code to test the property studyKey
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property visitId (base name: "visitId")', function() {
      // uncomment below and update the code to test the property visitId
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property intervalId (base name: "intervalId")', function() {
      // uncomment below and update the code to test the property intervalId
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property intervalName (base name: "intervalName")', function() {
      // uncomment below and update the code to test the property intervalName
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property subjectId (base name: "subjectId")', function() {
      // uncomment below and update the code to test the property subjectId
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property subjectKey (base name: "subjectKey")', function() {
      // uncomment below and update the code to test the property subjectKey
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property visitDate (base name: "visitDate")', function() {
      // uncomment below and update the code to test the property visitDate
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property visitDateForm (base name: "visitDateForm")', function() {
      // uncomment below and update the code to test the property visitDateForm
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property visitDateQuestion (base name: "visitDateQuestion")', function() {
      // uncomment below and update the code to test the property visitDateQuestion
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "dateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

    it('should have the property dateModified (base name: "dateModified")', function() {
      // uncomment below and update the code to test the property dateModified
      //var instance = new MednetEdcApi.Visit();
      //expect(instance).to.be();
    });

  });

}));
