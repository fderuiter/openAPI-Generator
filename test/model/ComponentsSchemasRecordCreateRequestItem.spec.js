/**
 * Mednet EDC API
 * The Mednet EDC (Electronic Data Capture) REST API provides a single-point of access for reading data stored across iMednet data services. This specification documents all available endpoints in the latest version of the API. 
 *
 * The version of the OpenAPI document: 1.0.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MednetEdcApi);
  }
}(this, function(expect, MednetEdcApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComponentsSchemasRecordCreateRequestItem', function() {
    it('should create an instance of ComponentsSchemasRecordCreateRequestItem', function() {
      // uncomment below and update the code to test ComponentsSchemasRecordCreateRequestItem
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be.a(MednetEdcApi.ComponentsSchemasRecordCreateRequestItem);
    });

    it('should have the property formKey (base name: "formKey")', function() {
      // uncomment below and update the code to test the property formKey
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property formId (base name: "formId")', function() {
      // uncomment below and update the code to test the property formId
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property siteName (base name: "siteName")', function() {
      // uncomment below and update the code to test the property siteName
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property siteId (base name: "siteId")', function() {
      // uncomment below and update the code to test the property siteId
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property subjectKey (base name: "subjectKey")', function() {
      // uncomment below and update the code to test the property subjectKey
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property subjectId (base name: "subjectId")', function() {
      // uncomment below and update the code to test the property subjectId
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property subjectOid (base name: "subjectOid")', function() {
      // uncomment below and update the code to test the property subjectOid
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property intervalName (base name: "intervalName")', function() {
      // uncomment below and update the code to test the property intervalName
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property intervalId (base name: "intervalId")', function() {
      // uncomment below and update the code to test the property intervalId
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property recordId (base name: "recordId")', function() {
      // uncomment below and update the code to test the property recordId
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property recordOid (base name: "recordOid")', function() {
      // uncomment below and update the code to test the property recordOid
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new MednetEdcApi.ComponentsSchemasRecordCreateRequestItem();
      //expect(instance).to.be();
    });

  });

}));
